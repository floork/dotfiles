#!/bin/env bash

set -euo pipefail

function update_symlinks() {
  declare -A symlinks=(
    # SHELL
    # # bash
    [".bashrc"]="$dotfiles_dir/bash/bashrc"
    # # fish
    [".config/fish"]="$dotfiles_dir/fish"
    # # nushell
    [".config/nushell"]="$dotfiles_dir/nushell"
    # # zsh
    [".config/zsh"]="$dotfiles_dir/zsh"
    [".zshrc"]="$dotfiles_dir/zsh/zshrc"
    # # shared resources
    [".aliasrc"]="$dotfiles_dir/shell/aliasrc"
    [".functionsrc"]="$dotfiles_dir/shell/functionsrc"

    # SYSTEM
    [".icons/my-cursor"]="$dotfiles_dir/my-cursor"
    [".themes/my-cursor"]="$dotfiles_dir/my-cursor"
    [".config/systemd"]="$dotfiles_dir/systemd"
    [".config/cmake"]="$dotfiles_dir/cmake"
    [".docker"]="$dotfiles_dir/docker"

    # GIT
    [".gitconfig"]="$dotfiles_dir/git/gitconfig"
    [".gitignore"]="$dotfiles_dir/git/gitignore"
    [".config/gh"]="$dotfiles_dir/gh"

    # CLI
    # # discord-bot
    [".config/discord-bot"]="$dotfiles_dir/discord-bot"
    # # tmux
    [".tmux.conf"]="$dotfiles_dir/tmux/tmux.conf"
    # # neofetch
    [".config/neofetch"]="$dotfiles_dir/neofetch"
    # # starship
    [".config/starship.toml"]="$dotfiles_dir/starship/starship.toml"
    # # fd
    [".config/fd"]="$dotfiles_dir/fd"
    # # bat
    [".config/bat"]="$dotfiles_dir/bat"
    # # vim
    [".config/vim"]="$dotfiles_dir/vim"
    # # zellij
    [".config/zellij"]="$dotfiles_dir/zellij"

    # Desktop applications
    [".config/dunst"]="$dotfiles_dir/dunst"
    [".config/fuzzel"]="$dotfiles_dir/fuzzel"
    [".config/gromit-mpx.ini"]="$dotfiles_dir/gromit-mpx/gromit-mpx.ini"
    [".config/gromit-mpx.cfg"]="$dotfiles_dir/gromit-mpx/gromit-mpx.cfg"
    [".config/hypr"]="$dotfiles_dir/hypr"
    [".config/Thunar"]="$dotfiles_dir/Thunar"
    [".config/waybar"]="$dotfiles_dir/waybar"
    [".config/wofi"]="$dotfiles_dir/wofi"
    # # terminal
    [".config/alacritty"]="$dotfiles_dir/alacritty"
    [".config/warp-terminal"]="$dotfiles_dir/warp-terminal"
    [".config/wezterm"]="$dotfiles_dir/wezterm"
  )

  create_symlink() {
    local source=$1
    local target=$2

    if [ -e "$target" ]; then
      echo "Symlink for $source already exists."
    else
      ln -s "$source" "$target" || {
        echo "Failed to create symlink for $source"
        exit 1
      }
      echo "Symlink for $source created."
    fi
  }

  for source in "${!symlinks[@]}"; do
    create_symlink "${symlinks[$source]}" "$HOME/$source"
  done
}

function update_dotfiles() {
  git pull --autostash --rebase || {
    echo "Failed to update dotfiles"
    exit 1
  }
}

function update_nvim() {
  NVIM_CONFIG_DIR="$HOME/.config/nvim"
  echo "Updating nvim configuration..."
  if ! [[ -d "$NVIM_CONFIG_DIR" ]]; then
    git clone https://github.com/floork/nvim.git "$NVIM_CONFIG_DIR" || {
      echo "Failed to clone nvim configuration"
      exit 1
    }
    return
  fi

  cd "$NVIM_CONFIG_DIR" || exit
  git pull || {
    echo "Failed to update nvim configuration"
    exit 1
  }
  cd "$dotfiles_dir" || exit
}

function update_user_bin_directory() {
  BIN_DIR="$HOME/.local/bin"
  mkdir -p "$BIN_DIR"

  for file in "$dotfiles_dir/bin"/*; do
    ln -sf "$file" "$BIN_DIR/" || {
      echo "Failed to update user bin directory"
      exit 1
    }
  done
}

function update_wallpapers() {
  WALLPAPERS_DIR="$HOME/.config/wallpapers"
  if [ -d "$WALLPAPERS_DIR" ]; then
    cd "$WALLPAPERS_DIR" || exit
    git pull || {
      echo "Failed to update wallpapers"
      exit 1
    }
    cd "$dotfiles_dir" || exit
    return
  fi

  mkdir $WALLPAPERS_DIR
  git clone https://github.com/floork/wallpapers $WALLPAPERS_DIR
  cd $WALLPAPERS_DIR
  git submodule update --init --recursive
}

function main() {
  local dir_from_cmd_source

  # Get the current directory
  dir_from_cmd_source=$(pwd)

  # Change to the dotfiles directory
  dotfiles_dir="$HOME/dotfiles"
  cd "$dotfiles_dir" || exit

  # Update the repository
  update_symlinks
  update_dotfiles
  update_nvim
  update_user_bin_directory
  update_wallpapers

  # Return to the original directory
  cd "$dir_from_cmd_source" || exit
}

main
