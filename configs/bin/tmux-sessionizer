#!/usr/bin/env bash

# inspired by https://github.com/ThePrimeagen/tmux-sessionizer
# but with some changes to fit my workflows

# Configurable variables
EXCLUDES=(".git" "node_modules" "Downloads")
SEARCH_PATHS=("$HOME")

sanity_check() {
  if ! command -v tmux &>/dev/null; then
    echo "tmux is not installed. Please install it first."
    exit 1
  fi

  if ! command -v fzf &>/dev/null; then
    echo "fzf is not installed. Please install it first."
    exit 1
  fi

  if ! command -v fd &>/dev/null; then
    echo "fd is not installed. Please install it first."
    exit 1
  fi
}

switch_to() {
  if [[ -z $TMUX ]]; then
    tmux attach-session -t "$1"
  else
    tmux switch-client -t "$1"
  fi
}

has_session() {
  tmux list-sessions 2>/dev/null | grep -q "^$1:"
}

hydrate() {
  if [ -f "$2/.tmux-sessionizer" ]; then
    tmux send-keys -t "$1" "source $2/.tmux-sessionizer" C-m
  elif [ -f "$HOME/.tmux-sessionizer" ]; then
    tmux send-keys -t "$1" "source $HOME/.tmux-sessionizer" C-m
  fi
}

find_dirs() {
  # List existing TMUX sessions
  if [[ -n "${TMUX}" ]]; then
    current_session=$(tmux display-message -p '#S')
    tmux list-sessions -F "[TMUX] #{session_name}" 2>/dev/null |
      grep -vFx "[TMUX] $current_session"
  else
    tmux list-sessions -F "[TMUX] #{session_name}" 2>/dev/null
  fi

  # Build exclude arguments for fd
  local exclude_args=()
  for exclude in "${EXCLUDES[@]}"; do
    exclude_args+=("--exclude" "$exclude")
  done

  # Find directories in search paths
  for path in "${SEARCH_PATHS[@]}"; do
    if [[ -d "$path" ]]; then
      # Add the search path itself
      echo "$path"
      # Find subdirectories using fd with more permissive settings
      fd --type d --hidden --no-ignore "${exclude_args[@]}" . "$path"
    fi
  done
}

sanity_check

main() {
  if [[ $# -eq 1 ]]; then
    selected="$1"
  else
    selected=$(find_dirs | fzf)
  fi

  if [[ -z $selected ]]; then
    exit 0
  fi

  # Handle TMUX session selection
  if [[ "$selected" =~ ^\[TMUX\]\ (.+)$ ]]; then
    switch_to "${BASH_REMATCH[1]}"
    exit 0
  fi

  # Generate session name from directory
  selected_name=$(basename "$selected" | tr . _)
  tmux_running=$(pgrep tmux)

  # Create session if it doesn't exist
  if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -ds "$selected_name" -c "$selected"
    hydrate "$selected_name" "$selected"
  fi

  if ! has_session "$selected_name"; then
    tmux new-session -ds "$selected_name" -c "$selected"
    hydrate "$selected_name" "$selected"
  fi

  switch_to "$selected_name"
}

main "$@"
