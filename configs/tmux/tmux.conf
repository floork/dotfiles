#------------------------------
# General Settings
#------------------------------

set -g history-limit 100000

# Set prefix to Ctrl + Space
set -g prefix C-Space
unbind C-b
bind-key C-Space send-prefix

# Enable mouse support
set -g mouse on

# Set vi mode for copy mode
set-window-option -g mode-keys vi

# Remove delay for exiting insert mode with ESC in Neovim
set -sg escape-time 10

#------------------------------
# Neovim & Terminal Integration
#------------------------------

# Enable focus events to allow Neovim to detect window focus changes
set-option -g focus-events on

#------------------------------
# Window Management
#------------------------------

# Horizontal split
unbind t
bind t split-window -h

# Vertical split
unbind '"'
bind v split-window -v

# Kill active window
unbind-key '&'
bind-key q kill-window

# Switch to the next window
unbind n
bind n next-window


#------------------------------
# Custom Key Bindings
#------------------------------

# Forget the find window. That is for chumps
bind -n C-f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"

# Kill current tmux window
unbind q
bind -r q run-shell "bash ~/.local/bin/tmux-close-window"

# Kill current tmux session
bind -r d run-shell "bash ~/.local/bin/tmux-close-session"

# Reload tmux config
unbind r
bind r source-file ~/.tmux.conf

unbind-key W
bind-key W select-layout even-horizontal

#------------------------------
# Vim / Neovim Key Bindings
#------------------------------

bind -n C-h if-shell 'tmux display-message -p "#{pane_current_command}" | grep -iqE "(n?vim)"' 'send-keys C-h' 'select-pane -L'
bind -n C-j if-shell 'tmux display-message -p "#{pane_current_command}" | grep -iqE "(n?vim)"' 'send-keys C-j' 'select-pane -D'
bind -n C-k if-shell 'tmux display-message -p "#{pane_current_command}" | grep -iqE "(n?vim)"' 'send-keys C-k' 'select-pane -U'
bind -n C-l if-shell 'tmux display-message -p "#{pane_current_command}" | grep -iqE "(n?vim)"' 'send-keys C-l' 'select-pane -R'


#------------------------------
# Copy Mode Key Bindings
#------------------------------

# Start selection in copy mode
bind-key -T copy-mode-vi 'v' send -X begin-selection

# Copy selection in copy mode
bind-key -T copy-mode-vi 'y' send -X copy-selection

# Unbind Mouse Drag End in copy mode
unbind -T copy-mode-vi MouseDragEnd1Pane

# ------------------------------
# Retro Classic Tmux Configuration
# ------------------------------

# Ensure true color support for Neovim and terminal applications
set-option -a terminal-features 'xterm-256color:RGB'

# Set terminal to 256 colors
set -g default-terminal "tmux-256color"
source-file ~/dotfiles/configs/colorscheme/retro-classic/tmux.conf

#------------------------------
# TMUX Plugin Manager (TPM) Setup
#------------------------------

# Install TPM plugins
# unbind I
# bind I run-shell "~/.config/tmux/plugins/tpm/scripts/install_plugins.sh"
#
# # Install TMUX Plugin Manager if not already installed
# run-shell 'install_tmux_plugin_manager() {
#     tpm_dir="$HOME/.tmux/plugins/tpm"
#     if [ ! -d "$tpm_dir" ]; then
#         git clone https://github.com/tmux-plugins/tpm "$tpm_dir" || {
#             echo "Failed to install TMUX Plugin Manager"
#             exit 1
#         }
#         echo "TMUX Plugin Manager installed."
#     fi
# } && install_tmux_plugin_manager'


#------------------------------
# TPM Plugins
#------------------------------

# List of TPM plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'omerxx/tmux-sessionx'

# Initialize TMUX plugin manager
# run '~/.tmux/plugins/tpm/tpm'


